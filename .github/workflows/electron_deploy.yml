name: Build and Release (electron)

on:
  push:
    tags: [ release-electron* ]


jobs:
  mac_deploy:
    runs-on: macos-latest

    strategy:
      matrix:
        node-versions: ["16.14.0"]

    steps:
      - name: "Checkout Project"
        uses: actions/checkout@v2

      - name: Set env
        run: |
          release_version=${GITHUB_REF#refs/*/}
          export VERSION=${release_version:17}
          export VERSION_SHORT=$(echo $VERSION | sed 's/\.//g')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "VERSION_SHORT=$VERSION_SHORT" >> $GITHUB_ENV
          cp ./quasar.conf.mac.js ./quasar.conf.js

      - name: Setup NodeJS Environment ${{ matrix.node-versions }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: "Install Node Module"
        run: yarn install && yarn add @quasar/cli

      - name: "Build and Package"
        run: ./node_modules/@quasar/app/bin/quasar build -m electron -P always

      - name: "List"
        run: |
          ls ./dist/electron
          ls ./dist/electron/Packaged/

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./dist/electron/Packaged/paperlib-${{ env.VERSION }}.dmg
            ./dist/electron/Packaged/paperlib-${{ env.VERSION }}.dmg.blockmap
            ./dist/electron/Packaged/latest.yml
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  win_deploy:
    runs-on: windows-latest

    defaults:
      run:
        shell: bash

    strategy:
      matrix:
        node-versions: ["16.13.1"]

    steps:
      - name: "Checkout Project"
        uses: actions/checkout@v2

      - name: Set env
        run: |
          release_version=${GITHUB_REF#refs/*/}
          export VERSION=${release_version:17}
          export VERSION_SHORT=$(echo $VERSION | sed 's/\.//g')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "VERSION_SHORT=$VERSION_SHORT" >> $GITHUB_ENV
          cp ./quasar.conf.win.js ./quasar.conf.js

      - name: Setup NodeJS Environment ${{ matrix.node-versions }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: "Install Node Module"
        run: yarn install && yarn add @quasar/cli

      - name: "Build and Package"
        run: ./node_modules/@quasar/app/bin/quasar build -m electron -P always

      - name: "List"
        run: |
          ls ./dist/electron
          ls ./dist/electron/Packaged/


      # - name: Install Oracle Cloud CLI
      #   run: |
      #     brew install oci-cli && mkdir ~/.oci
      #     echo -n ${{ secrets.OCI_CFG_DATA }} | base64 --decode --output config
      #     mv config ~/.oci
      #     echo -n ${{ secrets.OCI_KEY_DATA }} | base64 --decode --output oraclekey.cer
      #     mv oraclekey.cer ~/.oci
      # - name: Download Existing Versions
      #   run: oci os object bulk-download --bucket-name ${{ secrets.OCI_OS_BUCKET }} --namespace ${{ secrets.OCI_OS_NAMESPACE }} --prefix "distribution/mac/appcast.xml" --download-dir ./

      # - name: Package for Distribution
      #   run: |
      #     ditto -V -c -k --keepParent "Export/PaperLib.app" "PaperLib_v${{ env.VERSION_SHORT }}.zip"
      #     cp PaperLib_v${{ env.VERSION_SHORT }}.zip ./distribution/mac

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./dist/electron/Packaged/paperlib Setup ${{ env.VERSION }}.exe
            ./dist/electron/Packaged/paperlib Setup ${{ env.VERSION }}.exe.blockmap
            ./dist/electron/Packaged/latest.yml
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Convert Change Log to HTML
      #   run: |
      #     brew install pandoc
      #     pandoc -f markdown -t html ./CHANGELOG_EN.md -o PaperLib_v${{ env.VERSION_SHORT }}.html
      #     cp PaperLib_v${{ env.VERSION_SHORT }}.html ./distribution/mac
      #     cp PaperLib_v${{ env.VERSION_SHORT }}.html ./distribution/mac/changelog_en.html
      #     pandoc -f markdown -t html ./CHANGELOG_CN.md -o PaperLib_v${{ env.VERSION_SHORT }}_CN.html
      #     cp PaperLib_v${{ env.VERSION_SHORT }}_CN.html ./distribution/mac/changelog_cn.html
      # - name: Install Sparkle
      #   run: |
      #     wget -q https://github.com/sparkle-project/Sparkle/releases/download/2.0.0/Sparkle-2.0.0.tar.xz
      #     tar -xf Sparkle-2.0.0.tar.xz
      # - name: Generate Sparkle Appcast
      #   run: |
      #     ./bin/generate_appcast -s ${{ secrets.SPARKLE_KEY }} ./distribution/mac/
      #     cp PaperLib_v${{ env.VERSION_SHORT }}.zip ./distribution/mac/latest.zip
      # - name: Upload to Oracle Storage
      #   run: |
      #     oci os object put --bucket-name ${{ secrets.OCI_OS_BUCKET }} --file ./distribution/mac/appcast.xml --namespace ${{ secrets.OCI_OS_NAMESPACE }} --force --name distribution/mac/appcast.xml
      #     oci os object put --bucket-name ${{ secrets.OCI_OS_BUCKET }} --file ./distribution/mac/PaperLib_v${{ env.VERSION_SHORT }}.zip --namespace ${{ secrets.OCI_OS_NAMESPACE }} --force --name distribution/mac/PaperLib_v${{ env.VERSION_SHORT }}.zip
      #     oci os object put --bucket-name ${{ secrets.OCI_OS_BUCKET }} --file ./distribution/mac/PaperLib_v${{ env.VERSION_SHORT }}.html --namespace ${{ secrets.OCI_OS_NAMESPACE }} --force --name distribution/mac/PaperLib_v${{ env.VERSION_SHORT }}.html
      #     oci os object put --bucket-name ${{ secrets.OCI_OS_BUCKET }} --file ./distribution/mac/latest.zip --namespace ${{ secrets.OCI_OS_NAMESPACE }} --force --name distribution/mac/latest.zip
      #     oci os object put --bucket-name ${{ secrets.OCI_OS_BUCKET }} --file ./distribution/mac/changelog_en.html --namespace ${{ secrets.OCI_OS_NAMESPACE }} --force --name distribution/mac/changelog_en.html
      #     oci os object put --bucket-name ${{ secrets.OCI_OS_BUCKET }} --file ./distribution/mac/changelog_cn.html --namespace ${{ secrets.OCI_OS_NAMESPACE }} --force --name distribution/mac/changelog_cn.html
      #     oci os object bulk-upload --bucket-name ${{ secrets.OCI_OS_BUCKET }} --src-dir ./ --namespace ${{ secrets.OCI_OS_NAMESPACE }} --include "distribution/mac/PaperLib"${{ env.VERSION }}"*" --overwrite